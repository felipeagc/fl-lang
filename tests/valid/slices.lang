import c "core:c";

func main() {
    {
        // Slicing arrays

        var my_array: [10]i32;
        my_array[1] = 3;
        my_array[2] = 4;

        var lower: uint = 1;
        var upper: uint = 3;

        var my_slice: [_]i32 = my_array[lower..upper];

        if (my_slice.len != upper - lower) c.abort();
        if (my_slice[0] != 3) c.abort();
        if (my_slice[1] != 4) c.abort();
        if (&my_slice[0] != &my_array[1]) c.abort();
        if (&my_slice[0] != my_slice.ptr) c.abort();
        if (my_array[..].len != my_array.len) c.abort();

        c.printf(c"%d\n", my_slice[0]);
        c.printf(c"my_slice.len = %u\n", my_slice.len);
    }

    {
        // Slicing pointers

        var my_array: *i32 = c.malloc(@size_of(i32) * 10);
        my_array[1] = 3;
        my_array[2] = 4;

        var lower: u64 = 1;
        var upper: u64 = 3;

        var my_slice: [_]i32 = my_array[lower..upper];

        if (my_slice.len != upper - lower) c.abort();
        if (my_slice[0] != 3) c.abort();
        if (my_slice[1] != 4) c.abort();
        if (&my_slice[0] != &my_array[1]) c.abort();
        if (&my_slice[0] != my_slice.ptr) c.abort();

        c.printf(c"%d\n", my_slice[0]);
        c.printf(c"my_slice.len = %u\n", my_slice.len);

        if (my_array[..].len != 0) c.abort();
        if (my_array[..].ptr != my_array) c.abort();

        c.free(my_array);
    }

    {
        // Slicing slices

        var my_array: *i32 = c.malloc(@size_of(i32) * 10);
        my_array[2] = 3;
        my_array[3] = 4;

        var old_slice: [_]i32 = my_array[1..4];

        var lower: u64 = 1;
        var upper: u64 = 3;

        var my_slice: [_]i32 = my_array[1..4][lower..upper];

        if (my_slice.len != upper - lower) c.abort();
        if (my_slice[0] != 3) c.abort();
        if (my_slice[1] != 4) c.abort();
        if (&my_slice[0] != &old_slice[1]) c.abort();
        if (&my_slice[0] != &my_array[2]) c.abort();
        if (&my_slice[0] != my_slice.ptr) c.abort();

        if (my_slice[..].len != my_slice.len) c.abort();

        c.printf(c"%d\n", my_slice[0]);
        c.printf(c"my_slice.len = %u\n", my_slice.len);

        c.free(my_array);
    }

    {
        // Array to slice conversion

        const const_array = [5]i32{1, 2, 3, 4, 5};

        var my_slice: [_]i32 = const_array;
        for (var i: uint = 0; i < const_array.len; i += 1)
        {
            c.printf(c"my_slice[%lu] = %d\n", i, my_slice[i]);
        }
    }
}
