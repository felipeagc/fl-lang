import runtime "core:runtime";
import "core:c";

fn main() {
    // Integer
    var a: runtime.TypeInfo = @type_info_of(i32);
    if (a.kind != runtime.TypeKind.Int) abort();
    if (a.integer.num_bits != 32) abort();
    if (a.integer.is_signed != true) abort();

    // Pointer
    var b = @type_info_of(*i32);
    if (b.kind != runtime.TypeKind.Pointer) abort();
    if (b.pointer.sub.kind != runtime.TypeKind.Int) abort();

    // Array
    var c = @type_info_of([2]i32);
    if (c.kind != runtime.TypeKind.Array) abort();
    if (c.array.size != 2) abort();
    if (c.array.sub.kind != runtime.TypeKind.Int) abort();

    // Struct
    var d = @type_info_of(runtime.TypeInfo);
    if (d.kind != runtime.TypeKind.Struct) abort();
    if (d.structure.fields.len != 5) abort();

    // Function
    var e = @type_info_of(fn* (a: i32, b: [_]char) -> i32);
    if (e.kind != runtime.TypeKind.Pointer) abort();
    if (e.pointer.sub.kind != runtime.TypeKind.Function) abort();
    if (e.pointer.sub.function.return_type.kind != runtime.TypeKind.Int) abort();
    if (e.pointer.sub.function.parameters.len != 2) abort();
    if (e.pointer.sub.function.parameters[0].kind != runtime.TypeKind.Int) abort();
    if (e.pointer.sub.function.parameters[1].kind != runtime.TypeKind.Slice) abort();
    if (e.pointer.sub.function.parameters[1].array.sub.kind != runtime.TypeKind.Int) abort();

    // Enum
    var f = @type_info_of(runtime.TypeKind);
    if (f.kind != runtime.TypeKind.Enum) abort();
    if (f.enumeration.underlying_type.kind != runtime.TypeKind.Int) abort();
}
