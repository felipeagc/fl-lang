import "core:c";

typedef Struct struct {
    a: i32,
    b: *char,
};

const const_struct = Struct{321, c"Yo"};
const const_array = []i32{3, 4};

func main() {
    var my_array = [2]i32{1, 2};
    for (var i: uint = 0; i < my_array.len; i += 1) {
        printf(c"my_array[%lu] = %d\n", i, my_array[i]);
    }

    for (var i: uint = 0; i < const_array.len; i += 1) {
        printf(c"const_array[%lu] = %d\n", i, const_array[i]);
    }

    {
        var my_slice = const_array[..];
        for (var i: uint = 0; i < my_slice.len; i += 1) {
            printf(c"my_slice[%lu] = %d\n", i, my_slice[i]);
        }
    }

    {
        var my_slice = my_array[..];
        for (var i: uint = 0; i < my_slice.len; i += 1) {
            printf(c"my_slice[%lu] = %d\n", i, my_slice[i]);
        }
    }

    {
        var my_struct = Struct{1, c"Hello"};
        printf(c"my_struct.a = %d\n", my_struct.a);
        printf(c"my_struct.b = \"%s\"\n", my_struct.b);
    }

    {
        var zeroed_struct = Struct{};
        if (zeroed_struct.a != 0) abort();
        if (zeroed_struct.b != null) abort();
        printf(c"zeroed_struct.a = %d\n", zeroed_struct.a);
        printf(c"zeroed_struct.b = \"%s\"\n", zeroed_struct.b);
    }

    {
        var zeroed_array = [5]i32{};
        for (var i: uint = 0; i < zeroed_array.len; i += 1) {
            printf(c"zeroed_array[%lu] = %d\n", i, zeroed_array[i]);
            if (zeroed_array[i] != 0) abort();
        }
    }

    {
        printf(c"const_struct.a = %d\n", const_struct.a);
        printf(c"const_struct.b = \"%s\"\n", const_struct.b);
    }
}

