module files

version (posix) {
    import "core:posix"
    import "core:c"
    import "core:strings"

    pub func get_cwd_alloc() -> string {
        var buf = posix.getcwd(null, 0);
        return buf[0:c.strlen(buf)];
    }

    pub func chdir(path: string) -> bool {
        var c_path = strings.to_c_str_alloc(path);
        defer @dealloc(c_path);
        return posix.chdir(c_path) == 0;
    }

    pub func dir_entries_alloc(path: string) -> []string {
        var c_path = strings.to_c_str_alloc(path);
        defer @dealloc(c_path);

        var entries: [dyn]string;

        var ep: *posix.dirent;
        var dp: *posix.DIR = posix.opendir(c_path);

        if (dp != null) {
            ep = posix.readdir(dp);
            while (ep) {
                var c_entry = c.strdup(ep.d_name.ptr);
                @append(&entries, c_entry[0:c.strlen(c_entry)]);
                ep = posix.readdir(dp);
            }

            posix.closedir(dp);
        }

        return entries[:];
    }

    pub func dir_entries_free(entries: []string) {
        for (var i: uint = 0; i < entries.len; i += 1) {
            @dealloc(entries[i].ptr);
        }
        @dealloc(entries.ptr);
    }
}
