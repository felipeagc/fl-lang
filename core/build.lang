module build

import os "core:os"
import fmt "core:fmt"
import compiler "core:compiler"

pub typedef Builder struct {
    targets: [dyn]Target,
};

pub typedef Target struct {
    input: string,
    output: string,
    link_with: [_]string,
    library_paths: [_]string,
    opt_level: u32,
};

pub func add_target(builder: *Builder, target: *Target) {
    @append(&builder.targets, target.*);
}

pub func build(builder: *Builder) {
    for (*target in builder.targets) {
        input_time := os.last_write_time(target.input);
        output_time := os.last_write_time(target.output);

        if (input_time.sec >= output_time.sec) {
            fmt.printf("=> Building target '%'\n", target.output);

            compiler.compile(&compiler.Arguments{
                input = target.input,
                output = target.output,
                link_with = target.link_with,
                library_paths  = target.library_paths,
                opt_level = target.opt_level,
            });
        } else {
            fmt.printf("=> '%' is up to date\n", target.output);
        }
    }
}
